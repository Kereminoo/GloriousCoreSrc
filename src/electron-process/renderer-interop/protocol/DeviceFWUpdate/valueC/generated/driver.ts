// @generated by protobuf-ts 2.9.4 with parameter client_grpc1,optimize_code_size,use_proto_field_name
// @generated from protobuf file "driver.proto" (package "driver", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message driver.WeatherReq
 */
export interface WeatherReq {
    /**
     * @generated from protobuf field: string language = 1;
     */
    language: string;
    /**
     * @generated from protobuf field: string address = 2;
     */
    address: string;
}
/**
 * @generated from protobuf message driver.WeatherRes
 */
export interface WeatherRes {
    /**
     * @generated from protobuf field: string res = 1;
     */
    res: string;
}
/**
 * @generated from protobuf message driver.Version
 */
export interface Version {
    /**
     * @generated from protobuf field: string baseVersion = 1;
     */
    baseVersion: string;
    /**
     * @generated from protobuf field: string timeStamp = 2;
     */
    timeStamp: string;
}
/**
 * @generated from protobuf message driver.WirelessLoopStatus
 */
export interface WirelessLoopStatus {
    /**
     * @generated from protobuf field: bool lock = 1;
     */
    lock: boolean;
}
/**
 * @generated from protobuf message driver.InsertDb
 */
export interface InsertDb {
    /**
     * @generated from protobuf field: string dbPath = 1;
     */
    dbPath: string;
    /**
     * @generated from protobuf field: bytes key = 2;
     */
    key: Uint8Array;
    /**
     * @generated from protobuf field: bytes value = 3;
     */
    value: Uint8Array;
}
/**
 * @generated from protobuf message driver.DeleteItem
 */
export interface DeleteItem {
    /**
     * @generated from protobuf field: string dbPath = 1;
     */
    dbPath: string;
    /**
     * @generated from protobuf field: bytes key = 2;
     */
    key: Uint8Array;
}
/**
 * @generated from protobuf message driver.GetItem
 */
export interface GetItem {
    /**
     * @generated from protobuf field: string dbPath = 1;
     */
    dbPath: string;
    /**
     * @generated from protobuf field: bytes key = 2;
     */
    key: Uint8Array;
}
/**
 * @generated from protobuf message driver.Item
 */
export interface Item {
    /**
     * @generated from protobuf field: bytes value = 1;
     */
    value: Uint8Array;
    /**
     * @generated from protobuf field: string err_str = 2;
     */
    err_str: string;
}
/**
 * @generated from protobuf message driver.GetAll
 */
export interface GetAll {
    /**
     * @generated from protobuf field: string dbPath = 1;
     */
    dbPath: string;
}
/**
 * @generated from protobuf message driver.AllList
 */
export interface AllList {
    /**
     * @generated from protobuf field: repeated bytes data = 1;
     */
    data: Uint8Array[];
    /**
     * @generated from protobuf field: string err_str = 2;
     */
    err_str: string;
}
/**
 * @generated from protobuf message driver.MicrophoneMuteStatus
 */
export interface MicrophoneMuteStatus {
    /**
     * @generated from protobuf field: bool is_mute = 1;
     */
    is_mute: boolean;
    /**
     * @generated from protobuf field: string err = 2;
     */
    err: string;
}
/**
 * @generated from protobuf message driver.MuteMicrophone
 */
export interface MuteMicrophone {
    /**
     * @generated from protobuf field: bool need_mute = 1;
     */
    need_mute: boolean;
}
/**
 * @generated from protobuf message driver.OTAUpgrade
 */
export interface OTAUpgrade {
    /**
     * @generated from protobuf field: string devPath = 1;
     */
    devPath: string;
    /**
     * @generated from protobuf field: bytes file_buf = 2;
     */
    file_buf: Uint8Array;
}
/**
 * @generated from protobuf message driver.Progress
 */
export interface Progress {
    /**
     * @generated from protobuf field: float progress = 1;
     */
    progress: number;
    /**
     * @generated from protobuf field: string err = 2;
     */
    err: string;
}
/**
 * @generated from protobuf message driver.Empty
 */
export interface Empty {
}
/**
 * @generated from protobuf message driver.ResSend
 */
export interface ResSend {
    /**
     * @generated from protobuf field: string err = 1;
     */
    err: string;
}
/**
 * @generated from protobuf message driver.ResRead
 */
export interface ResRead {
    /**
     * @generated from protobuf field: string err = 1;
     */
    err: string;
    /**
     * @generated from protobuf field: bytes msg = 2;
     */
    msg: Uint8Array;
}
/**
 * @generated from protobuf message driver.SendMsg
 */
export interface SendMsg {
    /**
     * @generated from protobuf field: string devicePath = 1;
     */
    devicePath: string;
    /**
     * @generated from protobuf field: bytes msg = 2;
     */
    msg: Uint8Array;
    /**
     * @generated from protobuf field: driver.CheckSumType checkSumType = 3;
     */
    checkSumType: CheckSumType;
    /**
     * @generated from protobuf field: driver.DangleDevType dangleDevType = 4;
     */
    dangleDevType: DangleDevType;
}
/**
 * @generated from protobuf message driver.ReadMsg
 */
export interface ReadMsg {
    /**
     * @generated from protobuf field: string devicePath = 1;
     */
    devicePath: string;
}
/**
 * @generated from protobuf message driver.DeviceList
 */
export interface DeviceList {
    /**
     * @generated from protobuf field: repeated driver.DJDev devList = 1;
     */
    devList: DJDev[];
    /**
     * @generated from protobuf field: driver.DeviceListChangeType type = 2;
     */
    type: DeviceListChangeType;
}
/**
 * @generated from protobuf message driver.DJDev
 */
export interface DJDev {
    /**
     * @generated from protobuf oneof: oneofDev
     */
    oneofDev: {
        oneofKind: "dev";
        /**
         * @generated from protobuf field: driver.Device dev = 1;
         */
        dev: Device;
    } | {
        oneofKind: "dangleCommonDev";
        /**
         * @generated from protobuf field: driver.DangleCommon dangleCommonDev = 2;
         */
        dangleCommonDev: DangleCommon;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message driver.Device
 */
export interface Device {
    /**
     * @generated from protobuf field: driver.DeviceType devType = 1;
     */
    devType: DeviceType;
    /**
     * @generated from protobuf field: bool is24 = 2;
     */
    is24: boolean;
    /**
     * @generated from protobuf field: string path = 3;
     */
    path: string;
    /**
     * @generated from protobuf field: int32 id = 4;
     */
    id: number;
    /**
     * @generated from protobuf field: uint32 battery = 5;
     */
    battery: number;
    /**
     * @generated from protobuf field: bool isOnline = 6;
     */
    isOnline: boolean;
    /**
     * @generated from protobuf field: uint32 vid = 7;
     */
    vid: number;
    /**
     * @generated from protobuf field: uint32 pid = 8;
     */
    pid: number;
}
/**
 * @generated from protobuf message driver.Status24
 */
export interface Status24 {
    /**
     * @generated from protobuf field: uint32 battery = 1;
     */
    battery: number;
    /**
     * @generated from protobuf field: bool is_online = 2;
     */
    is_online: boolean;
}
/**
 * @generated from protobuf message driver.DangleStatus
 */
export interface DangleStatus {
    /**
     * @generated from protobuf oneof: dangleDev
     */
    dangleDev: {
        oneofKind: "empty";
        /**
         * @generated from protobuf field: driver.Empty empty = 1;
         */
        empty: Empty;
    } | {
        oneofKind: "status";
        /**
         * @generated from protobuf field: driver.Status24 status = 2;
         */
        status: Status24;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message driver.DangleCommon
 */
export interface DangleCommon {
    /**
     * @generated from protobuf field: driver.DangleStatus keyboard = 1;
     */
    keyboard?: DangleStatus;
    /**
     * @generated from protobuf field: driver.DangleStatus mouse = 2;
     */
    mouse?: DangleStatus;
    /**
     * @generated from protobuf field: string path = 3;
     */
    path: string;
    /**
     * @generated from protobuf field: uint32 keyboard_id = 5;
     */
    keyboard_id: number;
    /**
     * @generated from protobuf field: uint32 mouse_id = 6;
     */
    mouse_id: number;
    /**
     * @generated from protobuf field: uint32 vid = 7;
     */
    vid: number;
    /**
     * @generated from protobuf field: uint32 pid = 8;
     */
    pid: number;
}
/**
 * @generated from protobuf message driver.VenderMsg
 */
export interface VenderMsg {
    /**
     * @generated from protobuf field: bytes msg = 1;
     */
    msg: Uint8Array;
}
/**
 * @generated from protobuf message driver.SystemInfo
 */
export interface SystemInfo {
    /**
     * @generated from protobuf field: uint64 disk_space_total = 1;
     */
    disk_space_total: bigint;
    /**
     * @generated from protobuf field: uint64 disk_spce_available = 2;
     */
    disk_spce_available: bigint;
    /**
     * @generated from protobuf field: uint64 net_work_total_up = 3;
     */
    net_work_total_up: bigint;
    /**
     * @generated from protobuf field: uint64 net_work_total_down = 4;
     */
    net_work_total_down: bigint;
    /**
     * @generated from protobuf field: float cpu_temperater = 5;
     */
    cpu_temperater: number;
    /**
     * @generated from protobuf field: uint64 mem_total = 6;
     */
    mem_total: bigint;
    /**
     * @generated from protobuf field: uint64 mem_used = 7;
     */
    mem_used: bigint;
    /**
     * @generated from protobuf field: float cpu_usage = 8;
     */
    cpu_usage: number;
}
/**
 * @generated from protobuf message driver.SetLight
 */
export interface SetLight {
    /**
     * @generated from protobuf field: string devicePath = 1;
     */
    devicePath: string;
    /**
     * @generated from protobuf field: driver.LightType lightType = 2;
     */
    lightType: LightType;
    /**
     * @generated from protobuf field: uint32 screen_id = 3;
     */
    screen_id: number;
    /**
     * @generated from protobuf field: driver.DangleDevType dangleDevType = 4;
     */
    dangleDevType: DangleDevType;
}
/**
 * @generated from protobuf message driver.UpgradeDevInfo
 */
export interface UpgradeDevInfo {
    /**
     * @generated from protobuf field: uint32 dev_id = 1;
     */
    dev_id: number;
    /**
     * @generated from protobuf field: uint32 vid = 2;
     */
    vid: number;
    /**
     * @generated from protobuf field: uint32 pid = 3;
     */
    pid: number;
    /**
     * @generated from protobuf field: string devicePath = 4;
     */
    devicePath: string;
}
/**
 * @generated from protobuf message driver.ResUpgradeInfo
 */
export interface ResUpgradeInfo {
    /**
     * @generated from protobuf field: string err_str = 1;
     */
    err_str: string;
    /**
     * @generated from protobuf field: string res = 2;
     */
    res: string;
}
/**
 * @generated from protobuf message driver.UpgradeInfo
 */
export interface UpgradeInfo {
    /**
     * @generated from protobuf field: driver.UpgradeDevInfo dev = 1;
     */
    dev?: UpgradeDevInfo;
    /**
     * @generated from protobuf field: string version_str = 2;
     */
    version_str: string;
    /**
     * @generated from protobuf field: string file_path = 3;
     */
    file_path: string;
    /**
     * @generated from protobuf field: repeated driver.UpgradeMethod upgrade_method = 5;
     */
    upgrade_method: UpgradeMethod[];
}
/**
 * @generated from protobuf enum driver.DangleDevType
 */
export enum DangleDevType {
    /**
     * @generated from protobuf enum value: DangleDevTypeNone = 0;
     */
    DangleDevTypeNone = 0,
    /**
     * @generated from protobuf enum value: Keyboard = 1;
     */
    Keyboard = 1,
    /**
     * @generated from protobuf enum value: Mouse = 2;
     */
    Mouse = 2
}
/**
 * @generated from protobuf enum driver.CheckSumType
 */
export enum CheckSumType {
    /**
     * @generated from protobuf enum value: Bit7 = 0;
     */
    Bit7 = 0,
    /**
     * @generated from protobuf enum value: Bit8 = 1;
     */
    Bit8 = 1,
    /**
     * @generated from protobuf enum value: None = 2;
     */
    None = 2
}
/**
 * @generated from protobuf enum driver.DeviceListChangeType
 */
export enum DeviceListChangeType {
    /**
     * @generated from protobuf enum value: Init = 0;
     */
    Init = 0,
    /**
     * @generated from protobuf enum value: Add = 1;
     */
    Add = 1,
    /**
     * @generated from protobuf enum value: Remove = 2;
     */
    Remove = 2,
    /**
     * @generated from protobuf enum value: Change = 3;
     */
    Change = 3
}
/**
 * @generated from protobuf enum driver.DeviceType
 */
export enum DeviceType {
    /**
     * @generated from protobuf enum value: YZWKeyboard = 0;
     */
    YZWKeyboard = 0,
    /**
     * @generated from protobuf enum value: YZWBoot = 1;
     */
    YZWBoot = 1,
    /**
     * @generated from protobuf enum value: YZWVender = 2;
     */
    YZWVender = 2
}
/**
 * @generated from protobuf enum driver.LightType
 */
export enum LightType {
    /**
     * @generated from protobuf enum value: Music2 = 0;
     */
    Music2 = 0,
    /**
     * @generated from protobuf enum value: Screen = 1;
     */
    Screen = 1,
    /**
     * @generated from protobuf enum value: Other = 2;
     */
    Other = 2
}
/**
 * @generated from protobuf enum driver.UpgradeMethod
 */
export enum UpgradeMethod {
    /**
     * @generated from protobuf enum value: YZW = 0;
     */
    YZW = 0,
    /**
     * @generated from protobuf enum value: YZW24 = 1;
     */
    YZW24 = 1,
    /**
     * @generated from protobuf enum value: YC3016A = 2;
     */
    YC3016A = 2,
    /**
     * @generated from protobuf enum value: OLED = 3;
     */
    OLED = 3,
    /**
     * @generated from protobuf enum value: MLED = 4;
     */
    MLED = 4,
    /**
     * @generated from protobuf enum value: MOUSE = 5;
     */
    MOUSE = 5,
    /**
     * @generated from protobuf enum value: DANGLE1K = 6;
     */
    DANGLE1K = 6,
    /**
     * @generated from protobuf enum value: MOUSE8K = 7;
     */
    MOUSE8K = 7,
    /**
     * @generated from protobuf enum value: MOUSE8KRF = 8;
     */
    MOUSE8KRF = 8,
    /**
     * @generated from protobuf enum value: DANGLE4K = 9;
     */
    DANGLE4K = 9,
    /**
     * @generated from protobuf enum value: DANGLE4KRF = 10;
     */
    DANGLE4KRF = 10,
    /**
     * @generated from protobuf enum value: KEYBOARD8K = 11;
     */
    KEYBOARD8K = 11,
    /**
     * @generated from protobuf enum value: KEYBOARD8KRF = 12;
     */
    KEYBOARD8KRF = 12,
    /**
     * @generated from protobuf enum value: NORDICDANGLE = 13;
     */
    NORDICDANGLE = 13,
    /**
     * @generated from protobuf enum value: NORDICKEYBOARD = 14;
     */
    NORDICKEYBOARD = 14,
    /**
     * @generated from protobuf enum value: FLASH = 15;
     */
    FLASH = 15,
    /**
     * @generated from protobuf enum value: BK100 = 16;
     */
    BK100 = 16,
    /**
     * @generated from protobuf enum value: TOUCHSCREEN = 17;
     */
    TOUCHSCREEN = 17
}
// @generated message type with reflection information, may provide speed optimized methods
class WeatherReq$Type extends MessageType<WeatherReq> {
    constructor() {
        super("driver.WeatherReq", [
            { no: 1, name: "language", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.WeatherReq
 */
export const WeatherReq = new WeatherReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WeatherRes$Type extends MessageType<WeatherRes> {
    constructor() {
        super("driver.WeatherRes", [
            { no: 1, name: "res", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.WeatherRes
 */
export const WeatherRes = new WeatherRes$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Version$Type extends MessageType<Version> {
    constructor() {
        super("driver.Version", [
            { no: 1, name: "baseVersion", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "timeStamp", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.Version
 */
export const Version = new Version$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WirelessLoopStatus$Type extends MessageType<WirelessLoopStatus> {
    constructor() {
        super("driver.WirelessLoopStatus", [
            { no: 1, name: "lock", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.WirelessLoopStatus
 */
export const WirelessLoopStatus = new WirelessLoopStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InsertDb$Type extends MessageType<InsertDb> {
    constructor() {
        super("driver.InsertDb", [
            { no: 1, name: "dbPath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.InsertDb
 */
export const InsertDb = new InsertDb$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteItem$Type extends MessageType<DeleteItem> {
    constructor() {
        super("driver.DeleteItem", [
            { no: 1, name: "dbPath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.DeleteItem
 */
export const DeleteItem = new DeleteItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetItem$Type extends MessageType<GetItem> {
    constructor() {
        super("driver.GetItem", [
            { no: 1, name: "dbPath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.GetItem
 */
export const GetItem = new GetItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Item$Type extends MessageType<Item> {
    constructor() {
        super("driver.Item", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "err_str", kind: "scalar", localName: "err_str", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.Item
 */
export const Item = new Item$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAll$Type extends MessageType<GetAll> {
    constructor() {
        super("driver.GetAll", [
            { no: 1, name: "dbPath", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.GetAll
 */
export const GetAll = new GetAll$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllList$Type extends MessageType<AllList> {
    constructor() {
        super("driver.AllList", [
            { no: 1, name: "data", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "err_str", kind: "scalar", localName: "err_str", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.AllList
 */
export const AllList = new AllList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MicrophoneMuteStatus$Type extends MessageType<MicrophoneMuteStatus> {
    constructor() {
        super("driver.MicrophoneMuteStatus", [
            { no: 1, name: "is_mute", kind: "scalar", localName: "is_mute", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "err", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.MicrophoneMuteStatus
 */
export const MicrophoneMuteStatus = new MicrophoneMuteStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MuteMicrophone$Type extends MessageType<MuteMicrophone> {
    constructor() {
        super("driver.MuteMicrophone", [
            { no: 1, name: "need_mute", kind: "scalar", localName: "need_mute", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.MuteMicrophone
 */
export const MuteMicrophone = new MuteMicrophone$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OTAUpgrade$Type extends MessageType<OTAUpgrade> {
    constructor() {
        super("driver.OTAUpgrade", [
            { no: 1, name: "devPath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file_buf", kind: "scalar", localName: "file_buf", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.OTAUpgrade
 */
export const OTAUpgrade = new OTAUpgrade$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Progress$Type extends MessageType<Progress> {
    constructor() {
        super("driver.Progress", [
            { no: 1, name: "progress", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "err", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.Progress
 */
export const Progress = new Progress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("driver.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message driver.Empty
 */
export const Empty = new Empty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResSend$Type extends MessageType<ResSend> {
    constructor() {
        super("driver.ResSend", [
            { no: 1, name: "err", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.ResSend
 */
export const ResSend = new ResSend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResRead$Type extends MessageType<ResRead> {
    constructor() {
        super("driver.ResRead", [
            { no: 1, name: "err", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "msg", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.ResRead
 */
export const ResRead = new ResRead$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendMsg$Type extends MessageType<SendMsg> {
    constructor() {
        super("driver.SendMsg", [
            { no: 1, name: "devicePath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "msg", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "checkSumType", kind: "enum", T: () => ["driver.CheckSumType", CheckSumType] },
            { no: 4, name: "dangleDevType", kind: "enum", T: () => ["driver.DangleDevType", DangleDevType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.SendMsg
 */
export const SendMsg = new SendMsg$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadMsg$Type extends MessageType<ReadMsg> {
    constructor() {
        super("driver.ReadMsg", [
            { no: 1, name: "devicePath", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.ReadMsg
 */
export const ReadMsg = new ReadMsg$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeviceList$Type extends MessageType<DeviceList> {
    constructor() {
        super("driver.DeviceList", [
            { no: 1, name: "devList", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DJDev },
            { no: 2, name: "type", kind: "enum", T: () => ["driver.DeviceListChangeType", DeviceListChangeType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.DeviceList
 */
export const DeviceList = new DeviceList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DJDev$Type extends MessageType<DJDev> {
    constructor() {
        super("driver.DJDev", [
            { no: 1, name: "dev", kind: "message", oneof: "oneofDev", T: () => Device },
            { no: 2, name: "dangleCommonDev", kind: "message", oneof: "oneofDev", T: () => DangleCommon }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.DJDev
 */
export const DJDev = new DJDev$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Device$Type extends MessageType<Device> {
    constructor() {
        super("driver.Device", [
            { no: 1, name: "devType", kind: "enum", T: () => ["driver.DeviceType", DeviceType] },
            { no: 2, name: "is24", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "battery", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "isOnline", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "vid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "pid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.Device
 */
export const Device = new Device$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Status24$Type extends MessageType<Status24> {
    constructor() {
        super("driver.Status24", [
            { no: 1, name: "battery", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "is_online", kind: "scalar", localName: "is_online", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.Status24
 */
export const Status24 = new Status24$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DangleStatus$Type extends MessageType<DangleStatus> {
    constructor() {
        super("driver.DangleStatus", [
            { no: 1, name: "empty", kind: "message", oneof: "dangleDev", T: () => Empty },
            { no: 2, name: "status", kind: "message", oneof: "dangleDev", T: () => Status24 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.DangleStatus
 */
export const DangleStatus = new DangleStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DangleCommon$Type extends MessageType<DangleCommon> {
    constructor() {
        super("driver.DangleCommon", [
            { no: 1, name: "keyboard", kind: "message", T: () => DangleStatus },
            { no: 2, name: "mouse", kind: "message", T: () => DangleStatus },
            { no: 3, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "keyboard_id", kind: "scalar", localName: "keyboard_id", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "mouse_id", kind: "scalar", localName: "mouse_id", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "vid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "pid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.DangleCommon
 */
export const DangleCommon = new DangleCommon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VenderMsg$Type extends MessageType<VenderMsg> {
    constructor() {
        super("driver.VenderMsg", [
            { no: 1, name: "msg", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.VenderMsg
 */
export const VenderMsg = new VenderMsg$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SystemInfo$Type extends MessageType<SystemInfo> {
    constructor() {
        super("driver.SystemInfo", [
            { no: 1, name: "disk_space_total", kind: "scalar", localName: "disk_space_total", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "disk_spce_available", kind: "scalar", localName: "disk_spce_available", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "net_work_total_up", kind: "scalar", localName: "net_work_total_up", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "net_work_total_down", kind: "scalar", localName: "net_work_total_down", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cpu_temperater", kind: "scalar", localName: "cpu_temperater", T: 2 /*ScalarType.FLOAT*/ },
            { no: 6, name: "mem_total", kind: "scalar", localName: "mem_total", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "mem_used", kind: "scalar", localName: "mem_used", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "cpu_usage", kind: "scalar", localName: "cpu_usage", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.SystemInfo
 */
export const SystemInfo = new SystemInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetLight$Type extends MessageType<SetLight> {
    constructor() {
        super("driver.SetLight", [
            { no: 1, name: "devicePath", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lightType", kind: "enum", T: () => ["driver.LightType", LightType] },
            { no: 3, name: "screen_id", kind: "scalar", localName: "screen_id", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "dangleDevType", kind: "enum", T: () => ["driver.DangleDevType", DangleDevType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.SetLight
 */
export const SetLight = new SetLight$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpgradeDevInfo$Type extends MessageType<UpgradeDevInfo> {
    constructor() {
        super("driver.UpgradeDevInfo", [
            { no: 1, name: "dev_id", kind: "scalar", localName: "dev_id", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "vid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "pid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "devicePath", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.UpgradeDevInfo
 */
export const UpgradeDevInfo = new UpgradeDevInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResUpgradeInfo$Type extends MessageType<ResUpgradeInfo> {
    constructor() {
        super("driver.ResUpgradeInfo", [
            { no: 1, name: "err_str", kind: "scalar", localName: "err_str", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "res", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.ResUpgradeInfo
 */
export const ResUpgradeInfo = new ResUpgradeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpgradeInfo$Type extends MessageType<UpgradeInfo> {
    constructor() {
        super("driver.UpgradeInfo", [
            { no: 1, name: "dev", kind: "message", T: () => UpgradeDevInfo },
            { no: 2, name: "version_str", kind: "scalar", localName: "version_str", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "file_path", kind: "scalar", localName: "file_path", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "upgrade_method", kind: "enum", localName: "upgrade_method", repeat: 1 /*RepeatType.PACKED*/, T: () => ["driver.UpgradeMethod", UpgradeMethod] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message driver.UpgradeInfo
 */
export const UpgradeInfo = new UpgradeInfo$Type();
/**
 * @generated ServiceType for protobuf service driver.DriverGrpc
 */
export const DriverGrpc = new ServiceType("driver.DriverGrpc", [
    { name: "watchDevList", serverStreaming: true, options: {}, I: Empty, O: DeviceList },
    { name: "watchVender", serverStreaming: true, options: {}, I: Empty, O: VenderMsg },
    { name: "watchSystemInfo", serverStreaming: true, options: {}, I: Empty, O: SystemInfo },
    { name: "sendMsg", options: {}, I: SendMsg, O: ResSend },
    { name: "readMsg", options: {}, I: ReadMsg, O: ResRead },
    { name: "sendRawFeature", options: {}, I: SendMsg, O: ResSend },
    { name: "readRawFeature", options: {}, I: ReadMsg, O: ResRead },
    { name: "setLightType", options: {}, I: SetLight, O: Empty },
    { name: "upgradeOTAGATT", serverStreaming: true, options: {}, I: OTAUpgrade, O: Progress },
    { name: "muteMicrophone", options: {}, I: MuteMicrophone, O: ResSend },
    { name: "toggleMicrophoneMute", options: {}, I: Empty, O: ResSend },
    { name: "getMicrophoneMute", options: {}, I: Empty, O: MicrophoneMuteStatus },
    { name: "changeWirelessLoopStatus", options: {}, I: WirelessLoopStatus, O: Empty },
    { name: "insertDb", options: {}, I: InsertDb, O: ResSend },
    { name: "deleteItemFromDb", options: {}, I: DeleteItem, O: ResSend },
    { name: "getItemFromDb", options: {}, I: GetItem, O: Item },
    { name: "getAllKeysFromDb", options: {}, I: GetAll, O: AllList },
    { name: "getAllValuesFromDb", options: {}, I: GetAll, O: AllList },
    { name: "cleanDev", options: {}, I: ReadMsg, O: ResSend },
    { name: "getVersion", options: {}, I: Empty, O: Version },
    { name: "getWeather", options: {}, I: WeatherReq, O: WeatherRes },
    { name: "getUpgradeInfo", options: {}, I: UpgradeDevInfo, O: ResUpgradeInfo },
    { name: "upgradeDev", serverStreaming: true, options: {}, I: UpgradeInfo, O: Progress }
]);
